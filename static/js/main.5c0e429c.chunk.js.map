{"version":3,"sources":["hotline.ts","translate.ts","Menu.tsx","About.tsx","Covid19.tsx","Support.tsx","Hotlines.tsx","Info.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mergePhone","a","b","phone","mergeLang","lang","reduceHotlines","P","A","O","hours","mergeHotlines","m","i","concat","formatStrLabel","label","value","Read","tx","formatStrPhone","lbl","startsWith","formatStrHours","formatStrLang","groupAndFormatStrHotlines","hotlines","collectHotlines","h","formatStrHotline","xs","groupByCenter","NEA","center_ja","Rec_collect","f","r","Object","entries","k","Rec_mapKeys","v","fromEntries","updateCenterName","center_en","updateCenterNames","centers","formatStrPrefs","prefs","Rec","cs","hs","center","x","pref","require","module","areas","grouped","data","area","formatted","console","log","join","main","makeObj","arr","assign","Array","from","trans","TX","map","Japanese","English","tgtLang","s","phrase","n","indexOf","substring","length","path2Lang","path","updateLang","split","filter","stripLang","Menu","className","Navbar","variant","expand","Nav","Item","to","useLocation","pathname","Link","active","eventKey","Toggle","aria-controls","Collapse","id","href","Jumbotron","fluid","_tx","makeAboutEn","target","rel","makeAboutJa","About","props","makeCovid19En","makeCovid19Ja","Covid19","makeId","StringUtils","formatCase","FORMAT_LOWER_CAMEL_CASE","makeContactA","makeCenterLi","url","R","centerElem","body","phones","head","phoneAs","commas","phonesBody","makeContactsLi","hoursBody","langs","langsBody","makeLangLi","elem","topics","ts","hotline","_","topicsBody","makeTopicsLi","makePrefToggle","Card","Accordion","as","Header","Title","Body","empty","o","lis","hotlines2Element","sortEnPrefs","tail","makeAccordion","toggles","makeExplanation","Support","txProps","Hotlines","makeInfoEn","makeInfoJp","Info","Routes","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5c0e429c.chunk.js","sourcesContent":["/* eslint-disable */\nimport * as A from \"fp-ts/lib/Array\"\nimport * as NEA from \"fp-ts/lib/NonEmptyArray\"\nimport * as O from \"fp-ts/lib/Option\"\nimport * as P from \"fp-ts/lib/pipeable\"\n// noinspection ES6UnusedImports\nimport * as Read from \"fp-ts/lib/Reader\"\nimport * as Rec from \"fp-ts/lib/Record\"\nimport { NonEmptyArray } from \"fp-ts/lib/NonEmptyArray\"\n// noinspection ES6UnusedImports\nimport { Option } from \"fp-ts/lib/Option\"\nimport { Reader } from \"fp-ts/lib/Reader\"\n\nimport data from \"./data/all.json\"\nimport { Hotline } from \"./interfaces\"\nimport { tx } from \"./translate\"\nimport { Group, WithLang } from \"./types\"\n\nconst mergePhone:\n  (a: Hotline) => (b: Hotline) => Hotline =\n  (a: Hotline) => (b: Hotline) => {\n    a.phone = `${a.phone}, ${b.phone}`\n    return a\n  }\n\nconst mergeLang:\n  (a: Hotline) => (b: Hotline) => Hotline =\n  (a: Hotline) => (b: Hotline) => {\n    a.lang = `${a.lang}, ${b.lang}`\n    return a\n  }\n\nconst mergeHotlines:\n  (a: Hotline) => (b: Hotline) => Array<Hotline> =\n  (a: Hotline) => (b: Hotline) => {\n    if (a.hours === b.hours &&\n        a.lang === b.lang &&\n        a.phone !== b.phone) {\n      return [mergePhone(a)(b),]\n    } else if (a.phone === b.phone &&\n               a.hours === b.hours &&\n               a.lang === 'Japanese') {\n      return [mergeLang(a)(b),]\n    } else if (a.phone === b.phone &&\n               a.hours === b.hours &&\n               b.lang === 'Japanese') {\n      return [mergeLang(b)(a),]\n    } else if (a.phone === b.phone &&\n               a.hours === b.hours &&\n               a.lang === b.lang) {\n      return [a,]\n    } else {\n       return [a, b]\n    }\n  }\n\nconst reduceHotlines:\n  (b: Array<Hotline>, a: Hotline) => Array<Hotline> =\n  (b: Array<Hotline>, a: Hotline) =>\n    P.pipe(\n      A.last(b),\n      O.map(mergeHotlines(a)),\n      O.chain(m =>\n        P.pipe(\n          A.init(b),\n          O.map(i => i.concat(m)))\n      ),\n      O.getOrElse(() => [a, ])\n    )\n\nconst collectHotlines:\n  (hotlines: NonEmptyArray<Hotline>) => Array<Hotline> =\n  (hotlines: NonEmptyArray<Hotline>) =>\n    A.reduce([], reduceHotlines)(hotlines)\n\nconst formatStrLabel:\n  (label: string) => (value: string) => WithLang<string> =\n  (label: string) => (value: string) => Read.asks((lang: string) =>\n    `${tx(lang)(label)}: ${tx(lang)(value)}`\n  )\n\nconst formatStrPhone:\n  (phone: string) => WithLang<string> =\n  (phone: string) => {\n    const lbl = phone.startsWith('http') ? \"Contact (VoIP)\" : \"Phone\"\n    return formatStrLabel(lbl)(phone)\n  }\n\nconst formatStrHours: (_: string) => WithLang<string> =\n  formatStrLabel(\"Hours of operation\")\n\nconst formatStrLang: (_: string) => WithLang<string> =\n  formatStrLabel(\"Supported languages\")\n\nconst formatStrHotline:\n  (h: Hotline) => WithLang<Array<string>> =\n  (h: Hotline) => Read.asks( (lang: string) =>\n    [formatStrPhone(h.phone)(lang),\n     formatStrHours(h.hours)(lang),\n     formatStrLang(h.lang)(lang)]\n  )\n\n// eslint-disable-next-line\nconst A_join:\n  (key: string) => (xs: Array<string>) => string =\n  (key: string) => (xs: Array<string>) =>\n    xs.join(key)\n\n// eslint-disable-next-line\nconst A_concat:\n  <T>(xs: Array<T>) => (ys: Array<T>) => Array<T> =\n  <T>(xs: Array<T>) => (ys: Array<T>) =>\n    xs.concat(ys)\n\nconst groupAndFormatStrHotlines:\n  (hotlines: NonEmptyArray<Hotline>) => WithLang<Array<string>> =\n  (hotlines: NonEmptyArray<Hotline>) => Read.asks((lang: string) =>\n    P.pipe(\n      collectHotlines(hotlines),\n      A.map(h => formatStrHotline(h)(lang)),\n      A.map(xs => xs.concat([\"\", ])),\n      A.flatten\n    )\n  )\n\nexport const groupByCenter:\n  (hotlines: NonEmptyArray<Hotline>) => Group<Hotline> =\n    NEA.groupBy((h: Hotline) => h.center_ja)\n\n// fp-ts's implementation doesn't respect key order\nconst Rec_collect:\n  <A, B>(f: (k: string, a: A) => B) => (r: Record<string, A>) => Array<B> =\n  <A, B>(f: (k: string, a: A) => B) => (r: Record<string, A>) =>\n    P.pipe(\n      Object.entries(r),\n      A.map(([k, a]) => f(k, a))\n    )\n\nconst formatStrCenterName:\n  (center: string) => WithLang<string> =\n  (center: string) =>\n    P.pipe(\n      formatStrLabel(\"Center\")(center),\n      Read.map(x => `## ${x}`)\n    )\n\nexport const Rec_mapKeys:\n  <A>(f: ([k, a]: [string, A]) => string) => (r: Record<string, A>) =>\n    Record<string, A> =\n  <A>(f: ([k, a]: [string, A]) => string) => (r: Record<string, A>) =>\n      P.pipe(\n        Object.entries(r),\n        A.map(([k, v]) => [f([k, v]), v]),\n        Object.fromEntries\n      )\n\nconst getCenterName:\n  (h: Hotline) => Reader<string, string> =\n  (h: Hotline) => Read.asks((lang:string) =>\n    lang === \"en\" ? h.center_en : h.center_ja\n  )\n\nexport const updateCenterName:\n  (k: string) => (v: NonEmptyArray<Hotline>) => Reader<string, string> =\n  (k: string) => (v: NonEmptyArray<Hotline>) =>\n    getCenterName(NEA.head(v))\n\nexport const updateCenterNames:\n  (centers: Group<Hotline>) => Reader<string, Group<Hotline>> =\n  (centers: Group<Hotline>) => Read.asks((lang: string) =>\n    P.pipe(\n      centers,\n      Rec_mapKeys(([k, v]: [string, NonEmptyArray<Hotline>]) =>\n        updateCenterName(k)(v)(lang)\n      )\n    )\n  )\n\nconst formatStrCenters:\n  (centers: Group<Hotline>) => Reader<string, Array<string>> =\n  (centers: Group<Hotline>) => Read.asks((lang: string) =>\n    P.pipe(\n      centers,\n      Rec_mapKeys(([k, v]) => updateCenterName(k)(v)(lang)),\n      Rec.map(hs => groupAndFormatStrHotlines(hs)(lang)),\n      Rec_collect((k, a: Array<string>) =>\n        [formatStrCenterName(k)(lang), \"\"]\n          .concat(a)\n      ),\n      A.flatten\n    )\n  )\n\nexport const groupPrefs:\n  (areas: Record<string, Array<Hotline>>) => Record<string, Group<Hotline>> =\n  (areas: Record<string, Array<Hotline>>) =>\n    P.pipe(\n      areas,\n      Rec.filterMap(NEA.fromArray),\n      Rec.map(groupByCenter)\n    )\n\nconst formatStrPrefName:\n  (pref: string) => WithLang<string> =\n  (pref: string) => Read.asks((lang: string) =>\n    `# ${tx(lang)(pref)}`\n  )\n\nconst formatStrPrefs:\n  (prefs: Record<string, Group<Hotline>>) => WithLang<Array<string>> =\n  (prefs: Record<string, Group<Hotline>>) => Read.asks((lang: string) =>\n    P.pipe(\n      prefs,\n      Rec.map(cs => formatStrCenters(cs)(lang)),\n      Rec_collect((k, a: Array<string>) =>\n        [formatStrPrefName(k)(lang), \"\"]\n          .concat(a)\n      ),\n      A.flatten\n    )\n  )\n\nfunction main(): void {\n  const lang = \"en\"\n\n  const grouped: Record<string, Group<Hotline>> =\n    groupPrefs(data.area)\n\n  const formatted: Array<string> =\n    formatStrPrefs(grouped)(lang)\n\n  console.log(formatted.join(\"\\n\"))\n}\n\nif (require.main === module) {\n  main()\n}\n","import TX from \"./data/translations.json\"\n\nconst makeObj = <K extends string | number | symbol, V>(\n  arr: Array<[K, V]>\n): Record<K, V> =>\n  Object.assign({}, ...Array.from(arr, ([k, v]) => ({[k]: v}) ))\n\nconst jaen: Record<string, string> =\n  makeObj(TX.map(x => [x.Japanese, x.English]))\nconst enja: Record<string, string> =\n  makeObj(TX.map(x => [x.English, x.Japanese]))\nconst trans: Record<string, Record<string, Record<string, string>>> =\n  {'jp': {'en': jaen}, 'en': {'jp': enja}}\n\n// noinspection JSUnusedGlobalSymbols\nexport const tx:\n  (tgtLang: string) => (s: string) => string =\n  (tgtLang: string) => (s: string) => {\n  const srcLang = (tgtLang === 'jp') ? 'en' : 'jp'\n  const TX = trans[srcLang][tgtLang]\n  for (const phrase in TX) {\n    for (; ;) {\n      // noinspection JSUnfilteredForInLoop\n      const n = s.indexOf(phrase)\n      if (n < 0)\n        break\n      // noinspection JSUnfilteredForInLoop\n      s = s.substring(0, n) + TX[phrase] + s.substring(n + phrase.length)\n    }\n  }\n  return s\n}\n\nif (require.main === module) {\n}\n","import React from \"react\"\nimport { Jumbotron, Nav, Navbar } from \"react-bootstrap\"\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { useLocation } from \"react-router\"\n\nimport { tx as _tx } from \"./translate\"\n\nimport \"./Menu.css\"\n\nconst path2Lang = (path: string): string =>\n  path.startsWith('/jp') ? 'jp' : 'en'\n\nconst stripLang = (path: string): string => {\n  const xs = path.split('/')\n  const filtered = xs.filter(x => x !== 'en' && x !== 'jp')\n  return filtered.join('/')\n}\n\nconst updateLang = (lang: string, path: string) =>\n  \"/\" + lang + stripLang(path)\n\nconst Menu = (): JSX.Element => {\n  // noinspection HtmlUnknownTarget\n  return (\n    <div className=\"menu\">\n      <Navbar variant=\"dark\"\n              expand=\"sm\">\n        {/*<Navbar.Brand href=\"/\">{useLocation().pathname}</Navbar.Brand>*/}\n\n        <Nav className=\"navbar-expand\">\n          <Nav.Item>\n            <LinkContainer to={updateLang(\"en\", useLocation().pathname)}>\n              <Nav.Link active className=\"EN\" eventKey=\"en\">\n                {path2Lang(useLocation().pathname) === \"jp\" ? \"EN\" : \"英語\"}\n              </Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item>\n            <LinkContainer to={updateLang(\"jp\", useLocation().pathname)}>\n              <Nav.Link active className=\"JP\" eventKey=\"jp\">\n                {path2Lang(useLocation().pathname) === \"en\" ? \"日本語\" : \"JP\"}\n              </Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n        </Nav>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto menu\">\n            <Nav.Item>\n              <LinkContainer\n                to={\"/\" + path2Lang(useLocation().pathname) + \"/about\"}>\n                <Nav.Link active>ABOUT</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer\n                to={\"/\" + path2Lang(useLocation().pathname) + \"/covid19\"}>\n                <Nav.Link active>COVID-19</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer\n                to={\"/\" + path2Lang(useLocation().pathname) + \"/hotlines\"}>\n                <Nav.Link active>HOTLINES</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer\n                to={\"/\" + path2Lang(useLocation().pathname) + \"/info\"}>\n                <Nav.Link active>INFO</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer\n                to={\"/\" + path2Lang(useLocation().pathname) + \"/support\"}>\n                <Nav.Link active>SUPPORT</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <a href={\"/\" + path2Lang(useLocation().pathname)}>\n        <Jumbotron fluid>\n          <h1>COVID-19 Hotlines in Japan</h1>\n          <p>\n            {_tx(path2Lang(useLocation().pathname))(\n              '新型コロナウィルス対策に役立つ情報')} #COVID19HotlinesJp\n          </p>\n        </Jumbotron>\n      </a>\n    </div>\n  )\n}\n\nexport default Menu\n","/* eslint-disable no-script-url, jsx-a11y/anchor-is-valid */\nimport React from \"react\";\n\nimport \"./About.css\"\n\nconst makeOurGoalsEn = () => {\n  return (\n    <div className=\"our-goal\">\n      <h3>Our goal</h3>\n\n      <p>\n        The pandemic of Coronavirus disease 2019 (COVID-19) is causing\n        hardship for people all over the world. Given the rapidly-changing\n        situation, the spread of information is chaotic. We heard from many\n        people that it is difficult to obtain reliable information on important\n        matters related to COVID-19, and from foreign residents in Japan who\n        are made anxious by the lack of multi-lingual information.\n      </p>\n\n      <p>\n        Given this situation, we launched this project in order to:\n      </p>\n\n      <ul>\n        <li>\n          Share reliable information related to COVID-19 with the general\n          public in both Japanese and English\n        </li>\n        <li>\n          Provide a single resource for finding hotlines dedicated to COVID-19\n          consultations throughout Japan in both Japanese and English\n        </li>\n      </ul>\n\n      <p>\n        It is our sincere hope that we can help make reliable information\n        available to everybody in Japan.\n      </p>\n    </div>\n  )\n}\n\nconst makeOurGoalsJa = () => {\n  return (\n    <div className=\"our-goal\">\n      <h3>Our Goal</h3>\n\n      <p>\n        新型コロナウイルス感染症 (COVID-19) の拡大に伴い、世界各地の人々が、不安な日々を送る状況に陥っています。このような状況の中多くの情報が錯綜しており、一般の方々から本当に重要な情報が把握しにくいといった声や、外国人の方々から多言語の情報が不足しており不安と共に過ごしているという声を聞きました。\n      </p>\n\n      <p>\n        このような状況を鑑みて、少しでも貢献できることがないか議論した結果、以下のプロジェクトを立ち上げることにしました。\n      </p>\n\n      <ul>\n        <li>窓口となっている全国全ての帰国者・接触者相談センターの情報を集約し、英語と日本語の2言語で共有すること</li>\n        <li>一般の方々向けに、COVID-19関連の信頼できる情報を集約し、英語と日本語の2言語で共有すること</li>\n      </ul>\n\n      <p>\n        もしも近くに、緊急時の行動がわからなくて困っている方、情報が得られず困っている外国人の方がいたら、ぜひこちらのウェブサイトを教えて頂けたら嬉しいです。\n      </p>\n\n      <p>\n        このような私たちの活動が、少しでも日本にいる全ての方へ社会貢献できることを切に願っております。\n      </p>\n    </div>\n  )\n}\n\nconst makeAboutUsEn = () => {\n  // noinspection JSValidateTypes\n  return (\n    <div className=\"about-us\">\n      <h3>About us</h3>\n      <div className=\"chihiro-tsuchiya\">\n        <h5>Chihiro Tsuchiya</h5>\n        <ul>\n          <li>Affiliation: PhD Candidate of Graduate School of Asian\n            African Area Studies, Kyoto University</li>\n          <li>Qualification: Registered Nurse, Public Health Nurse, and\n            Master of Health Science</li>\n          <li>Specialty: Global Health, Area Study in Oceania</li>\n          <li>Homepage: <a\n            href=\"https://researchmap.jp/peacechyhi?lang=en\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            researchmap</a>\n          </li>\n          <li>Contact: <a href=\"javascript:location='mailto:\\u0063\\u0068\\u0069\\u0068\\u0069\\u0072\\u006f\\u0040\\u0063\\u006f\\u0076\\u0069\\u0064\\u0031\\u0039\\u002d\\u0068\\u006f\\u0074\\u006c\\u0069\\u006e\\u0065\\u0073\\u002e\\u006a\\u0070';void 0\">Send email</a></li>\n        </ul>\n      </div>\n\n      <div className=\"eric-nichols\">\n        <h5>Eric Nichols</h5>\n        <ul>\n          <li>Affiliation: Dr.Eng. in Information Science</li>\n          <li>Specialty: Artificial intelligence, natural language\n            processing, machine learning</li>\n          <li>Homepage: <a\n            href=\"https://scholar.google.co.jp/citations?user=I3_MfAMAAAAJ&hl=en\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            Google Scholar</a>\n          </li>\n          <li>Contact: <a href=\"javascript:location='mailto:\\u0065\\u0072\\u0069\\u0063\\u0040\\u0063\\u006f\\u0076\\u0069\\u0064\\u0031\\u0039\\u002d\\u0068\\u006f\\u0074\\u006c\\u0069\\u006e\\u0065\\u0073\\u002e\\u006a\\u0070';void 0\">Send email</a></li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst makeAboutUsJa = () => {\n  // noinspection JSValidateTypes\n  return (\n    <div className=\"about-us\">\n      <h3>About us</h3>\n      <div className=\"chihiro-tsuchiya\">\n        <h5>土谷 ちひろ</h5>\n        <ul>\n          <li>在籍: 京都大学大学院 アジア•アフリカ地域研究研究科(ASAFAS) 博士課程</li>\n          <li>資格: 看護師, 保健師, 保健学修士</li>\n          <li>専門分野: 国際保健, オセアニア地域研究</li>\n          <li>ホームページ: <a href=\"https://researchmap.jp/peacechyhi?lang=en\"\n                     target=\"_blank\" rel=\"noopener noreferrer\">\n                    researchmap\n                  </a>\n          </li>\n          <li>コンタクト: <a href=\"javascript:location='mailto:\\u0063\\u0068\\u0069\\u0068\\u0069\\u0072\\u006f\\u0040\\u0063\\u006f\\u0076\\u0069\\u0064\\u0031\\u0039\\u002d\\u0068\\u006f\\u0074\\u006c\\u0069\\u006e\\u0065\\u0073\\u002e\\u006a\\u0070';void 0\">メールを送る</a></li>\n        </ul>\n      </div>\n\n      <div className=\"eric-nichols\">\n        <h5>エリック・ニコルズ</h5>\n        <ul>\n          <li>資格: 情報科学博士(工)</li>\n          <li>専門分野: 人工知能, 自然言語処理, 機械学習</li>\n          <li>ホームページ: <a href=\"https://scholar.google.co.jp/citations?user=I3_MfAMAAAAJ&hl=en\"\n                           target=\"_blank\" rel=\"noopener noreferrer\">\n                          Google Scholar\n                        </a>\n          </li>\n          <li>コンタクト: <a href=\"javascript:location='mailto:\\u0065\\u0072\\u0069\\u0063\\u0040\\u0063\\u006f\\u0076\\u0069\\u0064\\u0031\\u0039\\u002d\\u0068\\u006f\\u0074\\u006c\\u0069\\u006e\\u0065\\u0073\\u002e\\u006a\\u0070';void 0\">メールを送る</a></li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst makeDisclaimerEn = () => {\n  return (\n    <div className=\"disclaimer\">\n      <h3>Disclaimer</h3>\n        <h4>Accuracy of information on this site</h4>\n        <ul>\n          <li>\n            We try to post information that is as accurate as possible on\n            this site. However, the information may become outdated.\n          </li>\n          <li>\n            We cannot guarantee the accuracy, legality, or safety of\n            the information on this site.\n          </li>\n        </ul>\n\n        <h4>Liability</h4>\n        <ul>\n          <li>\n            We are not responsible for any damages caused by the contents\n            posted on this site.\n          </li>\n          <li>\n            In addition, if you move from this site to another site by the\n            links  we posted, we will not take any responsibility for the\n            information and services on those sites.\n          </li>\n          <li>\n            You use the information on this site at your own risk.\n          </li>\n        </ul>\n\n      <h4>Reproduction prohibited</h4>\n        <ul>\n        <li>\n          Reproduction of copyrighted works such as texts existing on this\n          site for commercial purposes is prohibited without permission.\n        </li>\n        <li>\n            Please contact us with the URL if you link to this site.\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeDisclaimerJa = () => {\n  return (\n    <div className=\"disclaimer\">\n      <h3>免責事項</h3>\n        <h4>当サイトの情報の正確性について</h4>\n        <ul>\n          <li>\n            当サイトのコンテンツや情報において、可能な限り正確な情報を掲載するよう努めていますが誤情報が入り込んだり、情報が古くなったりすることもあります。\n          </li>\n          <li>\n            必ずしも正確性を保証するものではありません.また合法性や安全性なども保証しません。\n          </li>\n        </ul>\n\n        <h4>損害等の責任について</h4>\n        <ul>\n          <li>\n            当サイトに掲載された内容によって生じた損害等の一切の責任を負いかねますので、ご了承ください。\n          </li>\n          <li>\n            また当サイトからリンクやバナーなどによって他のサイトに移動された場合、移動先サイトで提供される情報、 サービス等について一切の責任も負いません。\n          </li>\n          <li>\n            当サイトを利用する場合は、自己責任で行う必要があります。\n          </li>\n        </ul>\n\n      <h4>無断転載の禁止について</h4>\n        <ul>\n        <li>\n          当サイトに存在する、文章や画像、動画等の著作物の情報を商用目的で無断転載することは禁止します。\n        </li>\n        <li>\n          当サイトはリンクフリーですが、リンクを行った場合は、問い合わせ先までリンク元のURLをご連絡ください。\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeAboutEn = () => {\n  return (\n    <div className=\"about\">\n      {makeOurGoalsEn()}\n      {makeAboutUsEn()}\n      {makeDisclaimerEn()}\n    </div>\n  )\n}\n\nconst makeAboutJa = () => {\n  return (\n    <div className=\"about\">\n      {makeOurGoalsJa()}\n      {makeAboutUsJa()}\n      {makeDisclaimerJa()}\n    </div>\n  )\n}\n\nconst makeAbout = (lang: string) =>\n  lang === 'en' ? makeAboutEn() : makeAboutJa()\n\nconst About = (props: {lang: string}): JSX.Element => {\n  return (\n    makeAbout(props.lang)\n  )\n}\n\nexport default About\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Covid19.css\"\n\nconst makeWhatEn = () => {\n  return (\n    <div className=\"what\">\n      <h3>What is COVID-19?</h3>\n\n      <p>\n        According to the <a\n           href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\"\n           target=\"_blank\" rel=\"noopener noreferrer\">WHO</a>, COVID-19 is\n        an infectious disease caused by the recently-discovered novel\n        coronavirus (SARS-CoV-2) that has caused an outbreak beginning in\n        Wuhan, China, in December 2019. It is a highly-infectious\n        respiratory illness that can become life-threatening.\n     </p>\n\n    </div>\n  )\n}\n\nconst makeSymptomsEn = () => {\n  return (\n    <div className=\"symptoms\">\n      <h3>What are its symptoms?</h3>\n\n      <p>\n        According to the <a\n           href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\"\n           target=\"_blank\" rel=\"noopener noreferrer\">WHO</a> and <a\n        href=\"https://www.thelancet.com/journals/laninf/article/PIIS1473-3099(20)30293-0/fulltext\"\n        target=\"_blank\" rel=\"noopener noreferrer\">the Lancet</a>, COVID-19\n        exhibits the following symptoms:\n      </p>\n\n      <ul>\n        <li>Fever</li>\n        <li>Coughing</li>\n        <li>Sore throat</li>\n        <li>Fatigue</li>\n        <li>Loss of smell or taste</li>\n        <li>Shortness of breath</li>\n      </ul>\n\n    </div>\n  )\n}\nconst makeSickEn = () => {\n  return (\n    <div className=\"sick\">\n      <h3>What should we do if we get sick?</h3>\n\n      <p>\n        <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00014.html\"\n           target=\"_blank\" rel=\"noopener noreferrer\">The Ministry of Health,\n          Labor, and Welfare</a> currently requests that if you suspect\n        infection, do not go directly to a medical facility. Instead please\n        first call the dedicated COVID-19 hotline in your prefecture.<br />\n      </p>\n    </div>\n  )\n}\n\nconst makeWhyEn = () => {\n  return (\n    <div className=\"why\">\n      <h3>Why call a hotline instead of going to the hospital?</h3>\n\n      <p>\n        Many common cold-like symptoms are caused by diseases other than\n        COVID-19, and going to medical facilities without prior consultation\n        with an expert increases the risk of spreading COVID-19 while placing\n        unnecessary strain on the healthcare system. (From <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00014.html#Q15\"\n           target=\"_blank\" rel=\"noopener noreferrer\">\n        the Ministry of Health, Labor, and Welfare</a>.)\n      </p>\n\n      <Link to=\"/en/hotlines\">\n        <h5>Find a hotline near you</h5>\n      </Link>\n\n      <h3>What should I do if I have a non-medical problem?</h3>\n\n      <p>\n        If you need help with any non-medical problems, we recommend calling\n        one of the foreigner support centers, where you can talk to a\n        knowledgeable volunteer in your native language.\n      </p>\n\n        <h5>\n          <Link to=\"/en/support\">Find a support center near you</Link>\n        </h5>\n    </div>\n  )\n}\n\n// eslint-disable-next-line\nconst makeWhatJp = () => {\n  return (\n    <div className=\"what\">\n      <h3>新型コロナウィルスとは？</h3>\n\n      <p>\n        <a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\"\n           target=\"_blank\" rel=\"noopener noreferrer\">世界保健機関(WHO)</a>に\n        よると、新型コロナウイルス感染症はコロナウイルス（SARS-CoV2）によって引き起こされる感染症です。2019年12月、中華人民共和国湖北省武漢市で「原因不明のウイルス性肺炎」として最初の症例が確認されました。主に肺炎のような呼吸器系の症状を引き起こしますが、全身に重篤な症状が表れることもあります。\n      </p>\n    </div>\n  )\n}\n\nconst makeSymptomsJa = () => {\n  return (\n    <div className=\"symptoms\">\n      <h3>新型コロナウィルスの症状は？</h3>\n\n      <p>\n        <a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\"\n             target=\"_blank\" rel=\"noopener noreferrer\">世界保健機関(WHO)\n        </a>と<a href=\"http://www.jibika.or.jp/citizens/covid19/mikaku.html\"\n                target=\"_blank\" rel=\"noopener noreferrer\">日本耳鼻咽喉科学会\n        </a>によると、新型コロナウイルス(COVID-19)の症状は以下の通りです。\n      </p>\n\n      <ul>\n        <li>発熱</li>\n        <li>咳</li>\n        <li>喉の痛み</li>\n        <li>強いだるさ</li>\n        <li>嗅覚・味覚障害</li>\n        <li>息苦しさ</li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeSickJa = () => {\n  return (\n    <div className=\"sick\">\n      <h3>体調が悪くなったらどうする？</h3>\n\n      <p>\n        新型コロナウイルス感染症の感染が疑われる方は、直接医療機関へ受診せず、事前に帰国者・接触者相談センターまでご相談ください。(<a\n        href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00001.html#Q5-1\"\n        target=\"_blank\" rel=\"noopener noreferrer\">厚生労働省HP</a>より)<br/>\n      </p>\n    </div>\n  )\n}\n\nconst makeWhyJp = () => {\n  return (\n    <div className=\"why\">\n      <h3>なぜ直に医療機関を受診してはいけないの？</h3>\n\n      <p>\n        風邪の症状があっても、新型コロナウイルス感染症以外の病気の方が圧倒的に多い状況です。また、適切な相談をせずに医療機関を受診することは、新型コロナウイルス感染症でなかった場合に、かえって感染するリスクを招くことになります。        (<a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00001.html#Q2-1\"\n           target=\"_blank\" rel=\"noopener noreferrer\"\n      >厚生労働省HP</a>より)\n      </p>\n\n      <p>\n        <Link to=\"/jp/hotlines\">\n          <h5>\n            各都道府県のセンターを探す\n          </h5>\n        </Link>\n      </p>\n\n      <h3>新型コロナウィルスに関して生活に不安や悩みがある場合は？</h3>\n\n      <p>\n        新型コロナウイルス感染症に関する一般的な電話相談（生活・お金・仕事・学校など）を行いたい方は、各都道府県・団体が設置している、外国人対応の生活相談窓口までご相談ください。\n      </p>\n\n      <h5>\n        <Link to=\"/jp/support\">各都道府県の生活相談窓口を探す</Link>\n      </h5>\n    </div>\n  )\n}\n\nconst makeCovid19En = () => {\n  return (\n    <div className=\"covid19\">\n      {makeWhatEn()}\n      {makeSymptomsEn()}\n      {makeSickEn()}\n      {makeWhyEn()}\n    </div>\n  )\n}\n\nconst makeCovid19Ja = () => {\n  return (\n    <div className=\"covid19\">\n      {makeWhatJp()}\n      {makeSymptomsJa()}\n      {makeSickJa()}\n      {makeWhyJp()}\n    </div>\n  )\n}\n\nconst makeCovid19 = (lang: string) =>\n  lang === 'en' ? makeCovid19En() : makeCovid19Ja()\n\nconst Covid19 = (props: {lang: string}): JSX.Element => {\n  return (\n    makeCovid19(props.lang)\n  )\n}\n\nexport default Covid19\n","import * as O from \"fp-ts/lib/Option\"\nimport * as NEA from \"fp-ts/lib/NonEmptyArray\"\nimport * as P from \"fp-ts/lib/pipeable\"\nimport * as R from \"rambda\"\nimport * as Read from \"fp-ts/lib/Reader\"\nimport * as Rec from \"fp-ts/lib/Record\"\nimport React from \"react\"\nimport { Reader } from \"fp-ts/lib/Reader\"\nimport { Accordion, Card } from \"react-bootstrap\"\nimport { StringUtils } from \"turbocommons-ts\"\n\nimport hotlines from \"./data/support.json\"\nimport { groupByCenter, updateCenterNames } from \"./hotline\"\nimport { Hotline, LangProps, TxProps } from \"./interfaces\"\nimport { tx as _tx } from \"./translate\"\nimport { Group } from \"./types\"\n\nimport \"./Support.css\"\n\nconst makeId = (s: string): string =>\n  StringUtils.formatCase(\n    _tx('en')(s),\n    StringUtils.FORMAT_LOWER_CAMEL_CASE\n  )\n\nconst makeContactA:\n  (phone: string) => JSX.Element =\n  (phone: string) => phone.startsWith('http') ?\n    <a href={phone} target=\"_blank\" rel=\"noopener noreferrer\">\n      {phone}\n    </a> :\n    <a href={\"tel:\" + phone}>{phone}</a>\n\nconst makeContactsLi:\n  (phones: Array<string>) => Reader<TxProps, JSX.Element> =\n  (phones: Array<string>) => Read.asks((props: TxProps) => {\n    const phoneAs: Array<JSX.Element> =\n      phones.map(makeContactA)\n    const commas: Array<string> =\n      R.repeat(\", \", phoneAs.length)\n    const label: string =\n      R.head(phones)?.startsWith('http') ?\n        'Contact (VoIP)' :\n        'Phone'\n    const phonesBody =\n      R.dropLast(1, R.flatten(R.zip(phoneAs, commas)))\n\n    return (\n      <div className='phones'>\n        <li>\n          {props.tx(label)}: {phonesBody}\n        </li>\n      </div>\n    )\n  })\n\nconst makeHoursLi:\n  (h: Hotline) => Reader<TxProps, JSX.Element> =\n  (h: Hotline) => Read.asks((props: TxProps) => {\n    const hours = h.hours.split('\\n').map(props.tx)\n    const hoursBody = hours.length > 1 ?\n      <ul>{hours.map(x => <li>{x}</li>)}</ul> :\n      hours\n    return (\n      <div className='hours-list'>\n        <li>\n          <div className='hours'>\n            {props.tx('Hours of operation')}: {hoursBody}\n          </div>\n        </li>\n      </div>\n    )\n  })\n\nconst makeLangLi:\n  (h: Hotline) => Reader<TxProps, JSX.Element> =\n  (h: Hotline) => Read.asks((props: TxProps) => {\n    const supportedLangs: string =\n      P.pipe(\n        O.fromNullable(h.lang),\n        O.getOrElse(() => 'Japanese')\n      )\n\n    const langs = supportedLangs.split('\\n').map(props.tx)\n    const langsBody = langs.length > 1 ?\n      <ul>{langs.map(x => <li>{props.tx(x)}</li>)}</ul> :\n      langs\n    return (\n      <div className='lang-list'>\n        <li>\n          <div className='lang'>\n            {props.tx('Supported languages')}: {langsBody}\n          </div>\n        </li>\n      </div>\n    )\n  })\n\nconst makeTopicsLi:\n  (h: Hotline) => Reader<TxProps,  JSX.Element | undefined> =\n  (h: Hotline) => Read.asks((props: TxProps) => {\n    const elem = P.pipe(\n      h.topics,\n      O.fromNullable,\n      O.map(ts => {\n        const allTopics =\n          P.pipe(\n            O.fromNullable(h.hotline),\n            O.map(_ =>\n              ts + \"\\n\" +\n              \"※Interpretation services for calling COVID-19 hotlines \" +\n              \"available.\"\n            ),\n            O.getOrElse(() => ts)\n          )\n\n        const topics = allTopics.split('\\n').map(props.tx)\n        const topicsBody = topics.length > 1 ?\n          <ul>{topics.map(x => <li>{props.tx(x)}</li>)}</ul> :\n          topics\n\n        return (\n          <div className='topic-list'>\n            <li>\n              <div className='topic'>\n                {props.tx('Topics')}: {topicsBody}\n              </div>\n            </li>\n          </div>\n        )\n      })\n    )\n\n    return O.toUndefined(elem)\n  })\n\nconst makeCenterLi:\n  (center: string) => (hotlines: Array<Hotline>) =>\n    Reader<TxProps, JSX.Element> =\n  (center: string) => (hotlines: Array<Hotline>) =>\n    Read.asks((props: TxProps) => {\n    const url: string =\n      P.pipe(\n        R.head(hotlines),\n        O.fromNullable,\n        O.mapNullable((h: Hotline) => h.url),\n        O.getOrElse(() => '')\n      )\n\n    const centerElem: string | JSX.Element =\n      url ?\n        <a target=\"_blank\" rel=\"noopener noreferrer\"\n           href={url}>{center}</a> :\n        center\n\n    const grouped: Array<Array<Hotline>> =\n      R.values(R.groupBy(h => `{h.hours}; {h.lang}`, hotlines))\n\n    const body: Array<JSX.Element> =\n      grouped.map((hs: Array<Hotline>) => {\n        const phones = hs.map(h => h.phone)\n        const head = R.head(hs)!\n        return (\n          <div className=\"hotline\">\n            {makeContactsLi(phones)(props)}\n            {makeHoursLi(head)(props)}\n            {makeLangLi(head)(props)}\n            {makeTopicsLi(head)(props)}\n          </div>\n        )\n      })\n\n    return (\n      <div className='center'>\n        <h5>\n          {centerElem}\n        </h5>\n        {body}\n      </div>\n    )\n  })\n\nconst hotlines2Element:\n  (area: Array<Hotline>) => (pref: string) => Reader<TxProps, JSX.Element> =\n  (area: Array<Hotline>) => (pref: string) =>\n    Read.asks((props: TxProps) => {\n      const empty: Group<Hotline> = {}\n\n      const centers: Group<Hotline> =\n        P.pipe(\n          NEA.fromArray(area),\n          O.map(groupByCenter),\n          O.map(o => updateCenterNames(o)(props.lang)),\n          O.getOrElse(() => empty)\n        )\n\n      const lis =\n        Object.entries(centers)\n          .map(([k, v]) =>\n            makeCenterLi(k)(v)(props)\n          )\n\n      return (\n        <div id={makeId(pref)} className=\"area\">\n          <ul>\n            {lis}\n          </ul>\n        </div>\n      )\n    })\n\nconst makePrefToggle:\n  (pref: string) => (area: Array<Hotline>) =>\n    Reader<TxProps, JSX.Element> =\n  (pref: string) => (area: Array<Hotline>) =>\n    Read.asks((props: TxProps) => (\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey={\"pref-\" + makeId(pref)}>\n          <Card.Title>\n            {props.tx(pref)}\n          </Card.Title>\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey={\"pref-\" + makeId(pref)}>\n          <Card.Body>\n            {hotlines2Element(area)(pref)(props)}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    ))\n\nconst sortByPrefId:\n  (pref: string) => (area: Array<Hotline>) => string =\n  (pref: string) => (area: Array<Hotline>) => makeId(pref)\n\nconst sortEnPrefs:\n  (prefs: Group<Hotline>) => Array<[string, Array<Hotline>]> =\n  (prefs: Group<Hotline>) => {\n    const entries: Array<[string, Array<Hotline>]> = Object.entries(prefs)\n    const tail: Array<[string, Array<Hotline>]> = R.tail(entries)\n    return R.sortBy(\n      ([k, v]) => sortByPrefId(k)(v),\n      tail\n    )\n  }\n\nexport const makeAccordion:\n  (prefs: Group<Hotline>) => Reader<TxProps, JSX.Element> =\n  (prefs: Group<Hotline>) => Read.asks((props: TxProps) => {\n    const sorted: Array<[string, Array<Hotline>]> =\n      props.lang === \"en\" ?\n        sortEnPrefs(prefs) :\n        R.tail(Object.entries(prefs))\n\n    const toggles: Array<JSX.Element> =\n      sorted.map(([k, v]) => makePrefToggle(k)(v)(props))\n\n    return (\n      <Accordion>\n        {toggles}\n      </Accordion>\n    )\n  })\n\nconst makeEnExplanation:\n  () => JSX.Element =\n  () => { return (\n    <div className=\"explanation\">\n      <p>\n        Support centers are free services that are run by various\n        governmental and volunteer organizations, and they provide information\n        and other support for problems in daily life that are related to\n        COVID-19 but not medical emergencies. Some of them will also offer\n        interpretation services if you need help calling a Japanese-language\n        COVID-19 hotline.\n      </p>\n    </div>\n  ) }\n\nconst makeJaExplanation:\n  () => JSX.Element =\n  () => { return (\n    <div className=\"explanation\">\n      <p>\n        生活相談窓口は、各都道府県や団体が無料で行っているサービスです。新型コロナウイルス感染症に関する一般的な電話相談（生活・経済面・仕事など）を外国語で相談することができます。いくつかの窓口では、帰国者・接触者センターに通訳するサービスも行っています。\n      </p>\n    </div>\n  ) }\n\nconst makeExplanation:\n  Reader<TxProps, JSX.Element> =\n  Read.asks((props: TxProps) =>\n    props.lang === \"en\" ? makeEnExplanation() : makeJaExplanation()\n  )\n\nconst Support: Reader<LangProps, JSX.Element> =\n  Read.asks((props: LangProps) => {\n    const txProps = {\n      lang: props.lang,\n      tx: _tx(props.lang)\n    }\n\n    const prefs: Group<Hotline> =\n      Rec.filterMap(NEA.fromArray)(hotlines.area)\n\n    return (\n      <div className=\"support\">\n        <div className=\"title\">\n          <h3>{txProps.tx(\"Support Centers\")}</h3>\n        </div>\n\n        {makeExplanation(txProps)}\n\n        <div className=\"date-updated\">\n          <p>{txProps.tx(\"Last updated\")}: 2020/5/13</p>\n        </div>\n\n        {makeAccordion(prefs)(txProps)}\n      </div>\n    )\n  })\n\nexport default Support\n","import * as NEA from \"fp-ts/lib/NonEmptyArray\"\nimport * as Read from \"fp-ts/lib/Reader\"\nimport * as Rec from \"fp-ts/lib/Record\"\nimport React from \"react\"\nimport { Reader } from \"fp-ts/lib/Reader\"\n\nimport { makeAccordion } from \"./Support\"\nimport hotlines from \"./data/all.json\"\nimport { Hotline, LangProps, TxProps } from \"./interfaces\"\nimport { tx as _tx } from \"./translate\"\nimport { Group } from \"./types\"\n\nimport \"./Hotlines.css\"\n\nconst makeEnExplanation:\n  () => JSX.Element =\n  () => { return (\n    <div className=\"explanation\">\n      <p>\n        These hotlines are government and volunteer-run organizations that\n        provide medical consultation on testing if you are worried that you\n        have COVID-19. We recommend first calling the foreign-language hotlines\n        listed for your prefecture. If you cannot get help, then call one of\n        the Japanese-language hotlines.\n      </p>\n    </div>\n  )\n}\n\nconst makeJaExplanation:\n  () => JSX.Element =\n  () => { return (\n    <div className=\"explanation\">\n      <p>\n        新型コロナウイルス感染症の感染が疑われる方は、直接医療機関へ受診せず、事前に帰国者・接触者相談センターまでご相談ください。もし日本語が話せない場合、まずは多言語対応のコールセンターに連絡してください。もし電話がつながらない場合または日本語が話せる場合、日本語対応の直接帰国者・接触者相談センターに連絡してください。\n      </p>\n    </div>\n  )\n}\nconst makeExplanation:\n  Reader<TxProps, JSX.Element> =\n  Read.asks((props: TxProps) =>\n    props.lang === \"en\" ? makeEnExplanation() : makeJaExplanation()\n  )\n\nconst Hotlines: Reader<LangProps, JSX.Element> =\n  Read.asks((props: LangProps) => {\n    const txProps: TxProps = {\n      lang: props.lang,\n      tx: _tx(props.lang)\n    }\n\n    const prefs: Group<Hotline> =\n      Rec.filterMap(NEA.fromArray)(hotlines.area)\n\n    return (\n      <div className=\"hotlines\">\n        <div className=\"title\">\n          <h3>{txProps.tx(\"Hotlines\")}</h3>\n        </div>\n\n        {makeExplanation(txProps)}\n\n        <div className=\"date-updated\">\n          <p>{txProps.tx(\"Last updated\")}: 2020/5/3</p>\n        </div>\n\n        {makeAccordion(prefs)(txProps)}\n      </div>\n    )\n  })\n\nexport default Hotlines\n","import React from \"react\";\n\nimport \"./Info.css\"\n\nconst makeSituationEn = () => {\n  return (\n    <div className=\"situation\">\n      <h3>What is the current situation?</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://toyokeizai.net/sp/visual/tko/covid19/en.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\">Current status using\n          data by the Ministry of Health, Labor and Welfare in Japan</a>\n        </li>\n        <li>\n          <a href=\"https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n             target=\"_blank\" rel=\"noopener noreferrer\">COVID-19 Global Cases\n            by the Center for Systems Science and Engineering (CSSE) at Johns\n            Hopkins University</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeNewsEn = () => {\n  return (\n    <div className=\"news\">\n      <h3>How can we get news in Japan?</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/newpage_00032.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\">News from the Ministry\n            of Health, Labor and Welfare, Japan</a>\n        </li>\n        <li>\n          <a href=\"https://www3.nhk.or.jp/nhkworld/en/news/tags/82/\"\n             target=\"_blank\" rel=\"noopener noreferrer\">Coronavirus outbreak\n            updates from NHK WORLD-JAPAN, the international service of Japan's\n            public broadcaster NHK</a>\n        </li>\n        <li>\n          <a href=\"https://www.japantimes.co.jp/liveblogs/news/coronavirus-outbreak-updates/\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            COVID-19 NEWS UPDATES by Japan Times</a>\n        </li>\n        <li>\n          <a href=\"https://reddit.com/r/japanlife/comments/g2vxf9/japanlife_coronavirus_megathread_viii_nationwide/\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            Reddit /r/japanlife Coronavirus Megathread</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makePreventionEn = () => {\n  return (\n    <div className=\"prevention\">\n      <h3>How we can prevent infection?</h3>\n\n      <ul>\n        <li>\n          Educational materials by the Ministry of Health, Labor and Welfare, Japan\n          <ul>\n            <li>\n              <a href=\"https://www.mhlw.go.jp/content/10900000/000615287.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\">\n                Avoid the \"Three Cs!\"</a>\n            </li>\n            <li>\n              <a href=\"https://www.mhlw.go.jp/content/10200000/000603614.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\">\n                Please Cooperate in measures against infectious diseases.</a>\n            </li>\n            <li>\n              <a href=\"https://www.mhlw.go.jp/content/10900000/000607599.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\">\n                Prevention Measures against Coronavirus Disease 2019\n                (COVID-19)</a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://www.youtube.com/watch?v=AKNNZRRo74o\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            A movie how to wash cloth mask (Ministry of Economy, Trade\n            and Industry, Japan, in Japanese)</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeOtherEn = () => {\n  return (\n    <div className=\"other\">\n      <h3>Other information</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            Information from WHO</a>\n        </li>\n        <li>\n          <a href=\"http://www.clair.or.jp/tabunka/portal/info/contents/114517.php\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            Information about COVID-19 in many languages </a>\n        </li>\n        <li>\n          <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00014.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            Q and A by the Ministry of Health, Labor and Welfare, Japan</a>\n        </li>\n        <li>\n          <a href=\"https://www.yubisashi.com/PDF/yubisashi_covid19.pdf\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            Handy point-and-speak guides for dealing with Coronavirus-related\n            scenarios</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeInfoEn = () => {\n  return (\n    <div className=\"info\">\n      {makeSituationEn()}\n      {makeNewsEn()}\n      {makePreventionEn()}\n      {makeOtherEn()}\n    </div>\n  )\n}\n\nconst makeSituationJp = () => {\n  return (\n    <div className=\"situation\">\n      <h3>現在の状況は？</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://toyokeizai.net/sp/visual/tko/covid19/\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >厚生労働省データを使用した日本国内感染の状況</a>\n        </li>\n        <li>\n          <a href=\"https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >ジョンズ・ホプキンス大学が公開した世界の新型コロナウィルス感染状況 (英語)</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeNewsJp = () => {\n  return (\n    <div className=\"news\">\n      <h3>最新のニュースは？</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/0000164708_00001.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >厚生労働省による最新情報</a>\n        </li>\n        <li>\n          <a href=\"https://www3.nhk.or.jp/news/special/coronavirus/\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >NHKによるCOVID-19特集</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makePreventionJp = () => {\n  return (\n    <div className=\"prevention\">\n      <h3>感染を予防する方法は？</h3>\n\n      <ul>\n        <li>厚生労働省が作成した、感染症対策のための啓発資料<ul>\n            <li>\n              <a href=\"https://www.kantei.go.jp/jp/content/000061234.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\"\n              >3つの密を避けましょう！</a>\n            </li>\n            <li>\n              <a href=\"https://www.mhlw.go.jp/content/10900000/000593493.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\"\n              >感染症対策へのご協力をお願いします</a>\n            </li>\n            <li>\n              <a href=\"https://www.pref.gunma.jp/contents/100150470.pdf\"\n                 target=\"_blank\" rel=\"noopener noreferrer\"\n              >こ家族に新型コロナウイルス感染か疑われる場合 家庭内てこ注意いたたきたいこと 〜8つのホイント〜</a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://www.youtube.com/watch?v=AKNNZRRo74o\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >経済産業省による布マスクの洗い方動画</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeOtherJp = () => {\n  return (\n    <div className=\"other\">\n      <h3>その他の情報</h3>\n\n      <ul>\n        <li>\n          <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >WHOによる特設サイト (英語)</a>\n        </li>\n        <li>\n          <a href=\"http://www.clair.or.jp/tabunka/portal/info/contents/114517.php\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >一般財団法人自治体国際化協会が運営するウェブサイト (多言語)</a>\n        </li>\n        <li>\n          <a href=\"https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/kenkou_iryou/dengue_fever_qa_00001.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >一般の方向けの厚生労働省Q＆A</a>\n        </li>\n        <li>\n          <a href=\"https://www.yubisashi.com/PDF/yubisashi_covid19.pdf\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >株式会社情報センター出版局による新型コロナウィルス対応 指さし会話(13か国語対応）</a>\n        </li>\n        <li>\n          <a href=\"https://covid19-jpn.com/forcitizen/\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >日本の有志医療者による医療情報のまとめ</a>\n        </li>\n        <li>\n          <a href=\"http://minato.sip21c.org/2019-nCoV-im3r.html\"\n             target=\"_blank\" rel=\"noopener noreferrer\"\n          >公衆衛生学と疫学を専門とする神戸大学中澤港教授によるリンク集</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nconst makeInfoJp = () => {\n  return (\n    <div className=\"info\">\n      {makeSituationJp()}\n      {makeNewsJp()}\n      {makePreventionJp()}\n      {makeOtherJp()}\n    </div>\n  )\n}\n\nconst makeInfo = (lang: string) =>\n  lang === 'en' ? makeInfoEn() : makeInfoJp()\n\nconst Info = (props: {lang: string}): JSX.Element => {\n  return (\n    makeInfo(props.lang)\n  )\n}\n\nexport default Info\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport About from \"./About\";\nimport Covid19 from \"./Covid19\";\nimport Hotlines from \"./Hotlines\";\nimport Info from \"./Info\";\nimport Support from \"./Support\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Covid19 lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en\">\n        <Covid19 lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en/about\">\n        <About lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en/covid19\">\n        <Covid19 lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en/hotlines\">\n        <Hotlines lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en/info\">\n        <Info lang=\"en\"/>\n      </Route>\n      <Route exact path=\"/en/support\">\n        <Support lang=\"en\"/>\n      </Route>\n\n      <Route exact path=\"/jp\">\n        <Covid19 lang=\"jp\"/>\n      </Route>\n      <Route exact path=\"/jp/about\">\n        <About lang=\"jp\"/>\n      </Route>\n      <Route exact path=\"/jp/covid19\">\n        <Covid19 lang=\"jp\"/>\n      </Route>\n      <Route exact path=\"/jp/hotlines\">\n        <Hotlines lang=\"jp\"/>\n      </Route>\n      <Route exact path=\"/jp/info\">\n        <Info lang=\"jp\"/>\n      </Route>\n      <Route exact path=\"/jp/support\">\n        <Support lang=\"jp\"/>\n      </Route>\n\n      <Route path=\"*\">\n        <Covid19 lang=\"en\"/>\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Routes\n","import React from \"react\"\n\nimport Menu from \"./Menu\"\nimport Routes from \"./Routes\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./Hotlines.css\"\nimport \"./Menu.css\"\n\nfunction App(props: {lang: string}): JSX.Element {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Routes />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <App lang=\"en\"/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}